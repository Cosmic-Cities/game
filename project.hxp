package;

import hxp.*;
import lime.tools.*;
import sys.FileSystem;
import sys.io.File;
import haxe.io.Path;

@:nullSafety
class Project extends HXProject
{
  static final TITLE:String = "Cosmic Cities";
  static final COMPANY:String = "OmgRod";
  static final VERSION:String = "1.0.0";
  static final EXECUTABLE_NAME:String = "CosmicCities";
  static final MAIN_CLASS:String = "Main";
  static final PRELOADER:String = "flixel.system.FlxPreloader";

  static final SOURCE_DIR:String = "src";
  static final MODS_PATH:String = "mods/example-mod/classes";
  static final ASSETS:Array<String> = ["assets", "mods"];

  public function new()
  {
    super();
    setupApp();
    setupWindow();
    setupDefines();
    setupHaxelibs();
    setupSources();
    setupAssets();
  }

  function setupApp()
  {
    meta.title = TITLE;
    meta.company = COMPANY;
    meta.version = VERSION;

    app.main = MAIN_CLASS;
    app.file = EXECUTABLE_NAME;
    app.preloader = PRELOADER;

    var buildType = debug ? "debug" : "release";
    app.path = "export/" + buildType + "/";
  }

  function setupWindow()
  {
    window.width = 640;
    window.height = 480;
    window.fps = 60;
    window.background = 0xFF000000;
    window.fullscreen = false;
    window.resizable = true;

    // Fixed orientation enum case
    window.orientation = Orientation.LANDSCAPE;
  }

  function setupDefines()
  {
    defines.set("FLX_NO_HEALTH", "");
    defines.set("FLX_NO_FOCUS_LOST_SCREEN", "");
    defines.set("NAPE_RELEASE_BUILD", "");
    defines.set("FLX_NO_GAMEPAD", "");
    defines.set("FLX_NO_NATIVE_CURSOR", "");
    if (!debug)
      defines.set("FLX_NO_DEBUG", "");
  }

  function setupHaxelibs()
  {
    haxelibs.push(new Haxelib("flixel"));
    haxelibs.push(new Haxelib("flixel-addons"));
    haxelibs.push(new Haxelib("flixel-ui"));
    haxelibs.push(new Haxelib("firetongue"));
    haxelibs.push(new Haxelib("nape-haxe4"));
    haxelibs.push(new Haxelib("hxdiscord_rpc"));
    haxelibs.push(new Haxelib("ase"));
    haxelibs.push(new Haxelib("actuate"));
    haxelibs.push(new Haxelib("polymod"));
    haxelibs.push(new Haxelib("hscript"));
    haxelibs.push(new Haxelib("newgrounds"));
    haxelibs.push(new Haxelib("hxcpp"));
    haxelibs.push(new Haxelib("cxx2hx"));
  }

  function setupSources()
  {
    sources.push(SOURCE_DIR);

    // Only include mod classes if the folder exists
    if (FileSystem.exists(MODS_PATH))
      sources.push(MODS_PATH);
  }

  function setupAssets()
  {
    // assets stuff tbd
    
    config.set("assets.exclude.patterns", ".*|cvs|thumbs.db|desktop.ini|*.hash|*.md");
    config.set("assets.exclude.web", "*.ogg");
    config.set("assets.exclude.native", "*.mp3");
  }
}
